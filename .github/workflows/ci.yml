name: CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - "feature/*"
      - "bugfix/*"
      - "hotfix/*"
      - "release/*"

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: recipes

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build_docker_image:
    name: Build docker image
    runs-on: ubuntu-latest
    outputs:
      docker_version: ${{ steps.docker_version.outputs.version }}

    steps:
      - uses: actions/checkout@v2

      - name: Get docker version
        id: docker_version
        run: |
          echo "::set-output name=version::$(git ls-files -s Dockerfile | awk '{print $2}' | cut -c1-16)"

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Check if image exists
        id: image_exists
        run: |
          response=$(docker manifest inspect ghcr.io/${{ github.repository }}/$IMAGE_NAME:${{ steps.docker_version.outputs.version }} > /dev/null ; echo $?)
          echo ::set-output name=image_exists::$(echo ${response})

      - name: Build docker image if it is not on registry
        if: ${{ steps.image_exists.outputs.image_exists == 1 }}
        run: make image

      - name: Push image to Github Registry
        if: ${{ steps.image_exists.outputs.image_exists == 1 }}
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(git ls-files -s Dockerfile | awk '{print $2}' | cut -c1-16)

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo IMAGE_NAME=$IMAGE_NAME

          docker push $IMAGE_ID:$VERSION

          docker tag $IMAGE_ID:$VERSION $IMAGE_ID:latest
          docker push $IMAGE_ID:latest

  # For future use
  test_python_scripts:
    name: Test Python Script
    needs: [build_docker_image]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/[[cookiecutter.project_slug]]:latest
      # options: --user vscode
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Run Pytest
        run: pytest